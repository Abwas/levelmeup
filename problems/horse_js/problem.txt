You have been provided with a rich and valuable data set that you
need to provide a simple query interface to.

In this exercise you will be provided with a LevelDB store that
contains over 2,000 tweets from @horse_js. Your job is to query
this data set for tweets that were made on a particular date.

Each entry is a single tweet. The key is the exact time that the
tweet was sent, in standard ISO date format (i.e. the format
generated by the Date object's `toISOString()` method.) The value
of the entry is simply a String representing the tweet's content.

Write a module that exports a single function that accepts two
arguments: a date string, of the form YYYY-DD-MM and a callback
function.

The first argument to the callback should be an Error if one occured
or null. The second argument, if there was no error, should be an
Array where each element is simply the String text of a tweet.

The array should contain ordered tweets for the single day given
as the first argument to your function.

---------------------------------------------------------------------
HINTS:

The ISO date format will always sort lexicographically, which means
that our tweets appear in date/time order in our data store without
any special work on our part.

Fetching data from LevelUP when you don't know the precise keys, or
how many keys you actually want (if any!) uses the
`createReadStream()` method. This returns a standard Node object
stream, where each chunk (or 'data' event) is an object containing
'key' and 'value' properties representing the entry at a point in
the data store. A ReadStream will progress forward through the
sorted keyspace (or reverse if you want).

Querying a data store with LevelUP involves defining a range. By
default the range is the whole store, but you can narrow it down
to a start and/or end key. For this exercise you want to start at
the first tweet on the given day and end at the last tweet of that
day.

...

